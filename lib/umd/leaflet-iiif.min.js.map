{"version":3,"sources":["webpack://leaflet-iiif/webpack/universalModuleDefinition","webpack://leaflet-iiif/./src/event.ts","webpack://leaflet-iiif/./src/layer.ts","webpack://leaflet-iiif/external {\"amd\":\"leaflet\",\"root\":\"L\",\"commonjs\":\"leaflet\",\"commonjs2\":\"leaflet\"}","webpack://leaflet-iiif/./src/types.ts","webpack://leaflet-iiif/./src/utils/server-capabilities.ts","webpack://leaflet-iiif/./src/utils/helper.ts","webpack://leaflet-iiif/./src/utils/projection.ts","webpack://leaflet-iiif/./src/toolbar.ts","webpack://leaflet-iiif/webpack/bootstrap","webpack://leaflet-iiif/webpack/runtime/compat get default export","webpack://leaflet-iiif/webpack/runtime/define property getters","webpack://leaflet-iiif/webpack/runtime/hasOwnProperty shorthand","webpack://leaflet-iiif/webpack/runtime/make namespace object","webpack://leaflet-iiif/./src/index.ts"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE__3__","IIIF_EVENTS","CHANGE_FORMAT","CHANGE_QUALITY","CHANGE_ROTATION","CHANGE_MIRRORING","IIIFLayer","TileLayer","url","options","super","map","server","SERVER_CAPABILITIES_DEFAULT","height","width","zoomLayers","setUrl","templateUrl","initializePromise","Promise","resolve","reject","response","fetch","data","json","computeServerCapabilities","Object","assign","DEFAULT_OPTIONS","tileSize","tileFormat","formats","quality","qualities","includes","minZoom","maxZoom","e","then","computeZoomLayers","onAdd","fitBounds","getBounds","setMaxBounds","registerEvents","onRemove","unRegisterEvents","coords","z","x","y","zoomLayer","find","layer","zoom","Error","unprojectedSquare","projectSquare","rotation","bottomLeft","topRight","tileSizeX","scale","tileSizeY","minX","Math","min","minY","maxX","maxY","mirroring","diffX","params","format","region","abs","size","s","ceil","_url","join","isValid","originalZoomLayer","tiles","result","projectedSquare","sw","unproject","ne","pow","push","setMaxZoom","length","setMinZoom","on","onTileLoadStyle","changeFormat","value","changeQuality","changeRotation","changeMirroring","off","redraw","tile","naturalWidth","naturalHeight","style","top","right","left","bottom","version","zoomOffset","DEFAULT_CONTROL_OPTIONS","enabled","title","html","uri","Array","computeServerCapabilitiesForV1","capabilities","profile","supports","log2","scaleFactors","computeServerCapabilitiesForV2","extraFormats","concat","filter","ef","extraQualities","eq","extraFeatures","computeServerCapabilitiesForV3","match","tile_width","tile_height","scale_factors","replace","projectPoint","point","rotationInRadian","PI","round","cos","sin","square","p1","p2","max","CONTROL_NAME","IIIFControl","Control","_container","container","getContainer","values","createActions","className","innerHTML","fn","fire","rotations","Number","parseInt","createButton","actions","actionsWrapper","dataset","opened","actionsList","forEach","action","li","appendChild","link","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","window","L","Event","tileLayer","control"],"mappings":"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","file":"leaflet-iiif.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"leaflet\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"leaflet\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"leaflet-iiif\"] = factory(require(\"leaflet\"));\n\telse\n\t\troot[\"leaflet-iiif\"] = factory(root[\"L\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE__3__) {\nreturn ","export const IIIF_EVENTS: { [event: string]: string } = {\n  CHANGE_FORMAT: \"iiif:format\",\n  CHANGE_QUALITY: \"iiif:quality\",\n  CHANGE_ROTATION: \"iiif:rotation\",\n  CHANGE_MIRRORING: \"iiif:mirroring\",\n};\n","import L, { Map, TileLayer, TileEvent } from \"leaflet\";\nimport { DEFAULT_OPTIONS, SERVER_CAPABILITIES_DEFAULT, IIIFLayerOptions, ServerCapabilities } from \"./types\";\nimport { IIIF_EVENTS } from \"./event\";\nimport { computeServerCapabilities } from \"./utils/server-capabilities\";\nimport { templateUrl } from \"./utils/helper\";\nimport { projectSquare } from \"./utils/projection\";\n\nexport class IIIFLayer extends TileLayer {\n  // Layer options\n  public options: IIIFLayerOptions;\n\n  // Leaflet map\n  map: Map | null = null;\n  _url: string;\n\n  // Promise of the\n  initializePromise: Promise<void>;\n\n  // Server capabilities\n  server: ServerCapabilities = SERVER_CAPABILITIES_DEFAULT;\n\n  // Dimension of the image\n  height = 0;\n  width = 0;\n\n  zoomLayers: Array<{\n    // Map zoom level\n    zoom: number;\n    // the scaling ratio\n    scale: number;\n    // height of the image at this scale\n    height: number;\n    // width of the image at this scale\n    width: number;\n    // number of tiles in x & y\n    tiles: [number, number];\n  }> = [];\n\n  /**\n   * IIIF Layer constructor.\n   *\n   * @param {string} url The IIIF info endpoint for an image  (ex: https://stacks.stanford.edu/image/iiif/hg676jb4964%2F0380_796-44/info.json)\n   * @param {object} options List of options for the layer\n   */\n  constructor(url: string, options: Partial<IIIFLayerOptions> = {}) {\n    super(url, options);\n    this.setUrl(templateUrl(url));\n  }\n\n  /**\n   * Initialize the layer by calling the info endpoint of the image,\n   * compute the server capabilities and set the initial state.\n   */\n  initialize(url: string, options: Partial<IIIFLayerOptions>): this {\n    // eslint-disable-next-line no-async-promise-executor\n    this.initializePromise = new Promise(async (resolve, reject) => {\n      try {\n        // Calling the iiif info endpoint\n        const response = await fetch(url);\n        const data = await response.json();\n\n        // saving the image dimension\n        this.height = data.height;\n        this.width = data.width;\n\n        // server capabilities\n        this.server = computeServerCapabilities(data);\n\n        // Settings\n        this.options = L.Util.setOptions(\n          this,\n          Object.assign(\n            {},\n            DEFAULT_OPTIONS,\n            // Server pref\n            {\n              tileSize: this.server.tileSize,\n              tileFormat: this.server.formats[0],\n              quality: this.server.qualities.includes(\"native\") ? \"native\" : \"default\",\n              minZoom: this.server.minZoom,\n              maxZoom: this.server.maxZoom,\n            },\n            // User's options\n            options,\n          ),\n        );\n        resolve();\n      } catch (e) {\n        reject(e);\n      }\n    });\n    return this;\n  }\n\n  onAdd(map: Map): this {\n    this.map = map;\n\n    // Wait for info.json fetch and parse to complete\n    this.initializePromise.then(() => {\n      // Compute image sizes\n      this.computeZoomLayers();\n\n      // calling super after we compute all the zoom\n      super.onAdd(map);\n\n      // Fit bounds\n      if (this.options.fitBounds) {\n        this.map.fitBounds(this.getBounds());\n      }\n\n      // Set max bound\n      if (this.options.setMaxBounds) {\n        this.map.setMaxBounds(this.getBounds());\n      }\n    });\n\n    // register events\n    this.registerEvents(map);\n\n    return this;\n  }\n\n  onRemove(map: Map): this {\n    // calling super\n    super.onRemove(map);\n\n    // Remove maxBounds set for this image\n    if (this.options.setMaxBounds) {\n      // bug in the type definition\n      map.setMaxBounds((null as unknown) as L.LatLngBoundsExpression);\n    }\n\n    // unregister events\n    this.unRegisterEvents(map);\n\n    return this;\n  }\n\n  /**\n   * Generate the tile IIIF url based on the tile coordinates\n   */\n  public getTileUrl(coords: L.Coords): string {\n    const z = coords[\"z\"];\n    const x = coords[\"x\"];\n    const y = coords[\"y\"];\n    const zoomLayer = this.zoomLayers.find(layer => layer.zoom === z);\n    if (!zoomLayer) throw new Error(`Can't create tile for zoom ${z}`);\n\n    // Handle rotation\n    const unprojectedSquare = projectSquare(-1 * this.options.rotation, {\n      bottomLeft: { x, y },\n      topRight: { x: x + 1, y: y + 1 },\n    });\n\n    const tileSizeX = this.options.tileSize.x / zoomLayer.scale;\n    const tileSizeY = this.options.tileSize.y / zoomLayer.scale;\n\n    // Compute the image region / bbox NW/SE\n    let minX = Math.min(unprojectedSquare.bottomLeft.x * tileSizeX, this.width);\n    const minY = Math.min(unprojectedSquare.bottomLeft.y * tileSizeY, this.height);\n    let maxX = Math.min(minX + tileSizeX, this.width);\n    const maxY = Math.min(minY + tileSizeY, this.height);\n\n    // In mirroring, if we do the diff with the width,\n    // we then have the bbox NE/SO,\n    // so we need to switch back to NW/SE by add/subs the diff\n    if (this.options.mirroring === true) {\n      const diffX = maxX - minX;\n      minX = this.width - minX - diffX;\n      maxX = this.width - maxX + diffX;\n    }\n\n    const params = {\n      format: this.options.tileFormat,\n      quality: this.options.quality,\n      mirroring: this.options.mirroring,\n      region: [minX, minY, Math.abs(maxX - minX), Math.abs(maxY - minY)],\n      rotation: (360 - this.options.rotation) % 360,\n      size: [Math.abs(maxX - minX), Math.abs(maxY - minY)].map(s => Math.ceil(s * zoomLayer.scale)) as [number, number],\n    };\n\n    return L.Util.template(this._url, {\n      format: params.format,\n      quality: params.quality,\n      mirroring: params.mirroring ? \"!\" : \"\",\n      region: params.region.join(\",\"),\n      rotation: params.rotation,\n      size: params.size.join(\",\"),\n    });\n  }\n\n  protected _isValidTile(coords: L.Coords): boolean {\n    let isValid = false;\n    const x = coords[\"x\"];\n    const y = coords[\"y\"];\n    const z = coords[\"z\"];\n\n    // Handle rotation (leaflet axis are reversed, so a 90 rotation is in fact a -90 rotation)\n    const unprojectedSquare = projectSquare(-1 * this.options.rotation, {\n      bottomLeft: { x, y },\n      topRight: { x: x + 1, y: y + 1 },\n    });\n\n    if (this.options.minZoom <= z && z <= this.options.maxZoom) {\n      const originalZoomLayer = this.zoomLayers.find(layer => layer.zoom === z);\n      if (\n        0 <= unprojectedSquare.bottomLeft.x &&\n        unprojectedSquare.bottomLeft.x < originalZoomLayer.tiles[0] &&\n        0 <= unprojectedSquare.bottomLeft.y &&\n        unprojectedSquare.bottomLeft.y < originalZoomLayer.tiles[1]\n      )\n        isValid = true;\n    }\n    return isValid;\n  }\n\n  /**\n   * Compute the bounds of the layer.\n   */\n  private getBounds(): L.LatLngBounds {\n    let result = L.latLngBounds([0, 1], [1, 0]);\n\n    const originalZoomLayer = this.zoomLayers.find(layer => layer.scale === 1);\n    if (this.map !== null && originalZoomLayer) {\n      const projectedSquare = projectSquare(this.options.rotation, {\n        bottomLeft: { x: 0, y: originalZoomLayer.height },\n        topRight: { x: originalZoomLayer.width, y: 0 },\n      });\n\n      const sw = this.map.unproject(L.point(projectedSquare.bottomLeft), 0);\n      const ne = this.map.unproject(L.point(projectedSquare.topRight), 0);\n      result = L.latLngBounds(sw, ne);\n    }\n\n    return result;\n  }\n\n  /**\n   * Compute the different images by zoom level\n   */\n  private computeZoomLayers(): void {\n    this.zoomLayers = [];\n\n    let zoom = this.options.minZoom;\n    while (zoom <= this.options.maxZoom) {\n      const scale = Math.pow(2, zoom);\n      const height = Math.ceil(this.height * scale);\n      const width = Math.ceil(this.width * scale);\n      this.zoomLayers.push({\n        zoom,\n        scale,\n        height,\n        width,\n        tiles: [Math.ceil(width / this.options.tileSize.x), Math.ceil(height / this.options.tileSize.y)],\n      });\n      zoom++;\n    }\n    // Setting the min /max zoom in the options & map\n    this.map.setMaxZoom(this.zoomLayers[this.zoomLayers.length - 1].zoom);\n    this.map.setMinZoom(this.zoomLayers[0].zoom);\n  }\n\n  private registerEvents(map: Map): void {\n    this.on(\"tileload\", this.onTileLoadStyle);\n    /* eslint-disable @typescript-eslint/no-explicit-any */\n    map.on(IIIF_EVENTS.CHANGE_FORMAT, (e: any) => this.changeFormat(e.value));\n    map.on(IIIF_EVENTS.CHANGE_QUALITY, (e: any) => this.changeQuality(e.value));\n    map.on(IIIF_EVENTS.CHANGE_ROTATION, (e: any) => this.changeRotation(e.value));\n    map.on(IIIF_EVENTS.CHANGE_MIRRORING, (e: any) => this.changeMirroring(e.value));\n    /* eslint-enable @typescript-eslint/no-explicit-any */\n  }\n\n  private unRegisterEvents(map: Map): void {\n    this.off(\"tileload\", this.onTileLoadStyle);\n    /* eslint-disable @typescript-eslint/no-explicit-any */\n    map.off(IIIF_EVENTS.CHANGE_FORMAT, (e: any) => this.changeFormat(e.value));\n    map.off(IIIF_EVENTS.CHANGE_QUALITY, (e: any) => this.changeQuality(e.value));\n    map.off(IIIF_EVENTS.CHANGE_ROTATION, (e: any) => this.changeRotation(e.value));\n    map.off(IIIF_EVENTS.CHANGE_MIRRORING, (e: any) => this.changeMirroring(e.value));\n    /* eslint-enable @typescript-eslint/no-explicit-any */\n  }\n\n  private changeFormat(value: string): void {\n    this.options.tileFormat = value;\n    this.redraw();\n  }\n\n  private changeQuality(value: string): void {\n    this.options.quality = value;\n    this.redraw();\n  }\n\n  private changeRotation(value: number): void {\n    this.options.rotation = value;\n    // Set max bound\n    if (this.options.setMaxBounds) {\n      this.map.setMaxBounds(this.getBounds());\n    }\n    this.redraw();\n  }\n\n  private changeMirroring(value: boolean): void {\n    this.options.mirroring = value;\n    this.redraw();\n  }\n\n  /**\n   * Handle border of images when the tiles are not full.\n   */\n  private onTileLoadStyle(tile: TileEvent): void {\n    if (tile.tile.naturalWidth !== this.options.tileSize.x || tile.tile.naturalHeight !== this.options.tileSize.y) {\n      tile.tile.style.width = `${tile.tile.naturalWidth}px`;\n      tile.tile.style.height = `${tile.tile.naturalHeight}px`;\n\n      const rotation = this.options.rotation % 360;\n      switch (rotation) {\n        case 90:\n          tile.tile.style.top = `${this.options.tileSize.x - tile.tile.naturalHeight}px`;\n          tile.tile.style.right = `${this.options.tileSize.y - tile.tile.naturalWidth}px`;\n          break;\n        case 180:\n          tile.tile.style.top = `${this.options.tileSize.x - tile.tile.naturalHeight}px`;\n          tile.tile.style.left = `${this.options.tileSize.y - tile.tile.naturalWidth}px`;\n          break;\n        case 270:\n          tile.tile.style.top = \"0\";\n          tile.tile.style.bottom = `${this.options.tileSize.x - tile.tile.naturalHeight}px`;\n          tile.tile.style.left = `${this.options.tileSize.y - tile.tile.naturalWidth}px`;\n          break;\n      }\n    }\n  }\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__3__;","import L, { ControlOptions, Point, TileLayerOptions } from \"leaflet\";\n\n/**\n * List the capabilities of the server.\n */\nexport interface ServerCapabilities {\n  // IIIF version of the server (1.1, 2.0 or 3.0)\n  version: string;\n  // List of supported formats\n  formats: Array<string>;\n  // List of supported qualities\n  qualities: Array<string>;\n  // Support 90s ratotation ?\n  rotation: boolean;\n  // Support mirroring ?\n  mirroring: boolean;\n  // min/max zoom (remated to Scale factors)\n  minZoom: number;\n  maxZoom: number;\n  // Preferd tile size\n  tileSize: Point | null;\n}\n\nexport const SERVER_CAPABILITIES_DEFAULT: ServerCapabilities = {\n  version: \"3.0\",\n  formats: [],\n  qualities: [],\n  rotation: false,\n  mirroring: false,\n  tileSize: null,\n  minZoom: 0,\n  maxZoom: 0,\n};\n\n/**\n * Settings of the layer.\n */\nexport interface IIIFLayerOptions extends TileLayerOptions {\n  // Size of the tile (as a square)\n  // If not specified and the server has a preference, we take it, otherwise 256\n  tileSize: Point;\n  // Format of the tiles (ie png, jpg, ...).\n  // Default is 'jpg'\n  tileFormat: string;\n  // Quality\n  quality: string;\n  // Rotation (ex: 0, 90, 180, 270).\n  // Default: 0\n  rotation: number;\n  // Mirroring\n  // Default false\n  mirroring: boolean;\n  // When initialiazed the layer, do you want to see the full picture ?\n  fitBounds: boolean;\n  // Does the user can pan outside the image ?\n  setMaxBounds: boolean;\n}\n\nexport const DEFAULT_OPTIONS: IIIFLayerOptions = {\n  tileSize: L.point(256, 256),\n  tileFormat: \"jpg\",\n  quality: \"default\",\n  rotation: 0,\n  mirroring: false,\n  fitBounds: true,\n  setMaxBounds: false,\n  minZoom: 0,\n  maxZoom: 0,\n  zoomOffset: 0,\n};\n\ninterface IIIFControlAction {\n  enabled: boolean;\n  title: string;\n  html: string;\n  // if undefined, we take the one from the server\n  values?: Array<string>;\n}\n\nexport interface IIIFControlOptions extends ControlOptions {\n  quality: IIIFControlAction;\n  format: IIIFControlAction;\n  rotation: IIIFControlAction;\n  mirroring: IIIFControlAction;\n}\n\nexport const DEFAULT_CONTROL_OPTIONS: IIIFControlOptions = {\n  quality: {\n    enabled: true,\n    title: \"Quality\",\n    html: `<span />`,\n  },\n  format: {\n    enabled: true,\n    title: \"Format\",\n    html: `<span />`,\n  },\n  rotation: {\n    enabled: true,\n    title: \"Rotation\",\n    html: `<span />`,\n  },\n  mirroring: {\n    enabled: true,\n    title: \"Mirroring\",\n    html: `<span />`,\n  },\n};\n\nexport interface TileUrlParams {\n  format: string;\n  quality: string;\n  mirroring: boolean;\n  region: [number, number, number, number];\n  rotation: number;\n  size: [number, number];\n}\n","import L from \"leaflet\";\nimport { SERVER_CAPABILITIES_DEFAULT, ServerCapabilities } from \"../types\";\n\n/* eslint-disable  @typescript-eslint/explicit-module-boundary-types, @typescript-eslint/no-explicit-any */\n\n/**\n * Compute the server capabilities from the response of the info.\n */\nexport function computeServerCapabilities(data: any): ServerCapabilities {\n  let uri = `${data[\"@context\"]}`;\n\n  // in v3 it can be an array where the last item is the uri\n  if (data[\"@context\"] instanceof Array) {\n    uri = data[\"@context\"][data[\"@context\"].length - 1];\n  }\n\n  switch (uri) {\n    case \"http://library.stanford.edu/iiif/image-api/1.1/context.json\":\n      return computeServerCapabilitiesForV1(data);\n      break;\n    case \"http://iiif.io/api/image/2/context.json\":\n      return computeServerCapabilitiesForV2(data);\n      break;\n    case \"http://iiif.io/api/image/3/context.json\":\n    default:\n      return computeServerCapabilitiesForV3(data);\n      break;\n  }\n}\n\n/**\n * Compute the server capabilities for a IIIF server in v1.1.\n * @see https://iiif.io/api/image/1.1/compliance/\n */\nexport function computeServerCapabilitiesForV1(data: any): ServerCapabilities {\n  const capabilities = Object.assign({}, SERVER_CAPABILITIES_DEFAULT);\n  capabilities.version = \"1.1\";\n\n  // Search the level compliance level\n  const match = `${data.profile}`.match(/^http:\\/\\/library.stanford.edu\\/iiif\\/image-api\\/1.1\\/compliance.html#(.*)$/);\n  const level = match && match.length === 2 ? match[1] : \"level0\";\n\n  // Defined capabilities per level\n  switch (level) {\n    case \"level2\":\n      capabilities.rotation = true;\n      capabilities.formats = [\"jpg\", \"png\"];\n      capabilities.qualities = [\"native\", \"color\", \"grey\", \"bitonial\"];\n      break;\n    case \"level1\":\n      capabilities.rotation = true;\n      capabilities.formats = [\"jpg\"];\n      capabilities.qualities = [\"native\"];\n      break;\n    // level0\n    default:\n      capabilities.rotation = false;\n      capabilities.formats = [\"jpg\"];\n      capabilities.qualities = [\"native\"];\n      break;\n  }\n  // Formats\n  if (data.formats) capabilities.formats = data.formats;\n\n  // Qualities\n  if (data.qualities) capabilities.qualities = data.qualities;\n\n  // Tiles size\n  if (data.tile_width)\n    capabilities.tileSize = L.point(data.tile_width, data.tile_height ? data.tile_height : data.tile_width);\n\n  // Scale factors\n  if (data.scale_factors && data.scale_factors.length > -1) {\n    capabilities.minZoom =\n      Math.log2(data.scale_factors[data.scale_factors.length - 1]) *\n      (data.scale_factors[data.scale_factors.length - 1] > 1 ? -1 : 1);\n    capabilities.maxZoom = Math.log2(data.scale_factors[0]) * (data.scale_factors[0] > 1 ? -1 : 1);\n  }\n\n  return capabilities;\n}\n\n/**\n * Compute the server capabilities for a IIIF server in v2.0.\n * @see https://iiif.io/api/image/2.0/#successful-responses\n */\nfunction computeServerCapabilitiesForV2(data: any): ServerCapabilities {\n  const capabilities = Object.assign({}, SERVER_CAPABILITIES_DEFAULT);\n  capabilities.version = \"2.0\";\n  const level = data.profile[0];\n\n  // Defined capabilities per level\n  switch (level) {\n    case \"level2\":\n      capabilities.qualities = [\"default\", \"bitonial\"];\n      capabilities.formats = [\"jpg\", \"png\"];\n      break;\n    case \"level1\":\n      capabilities.qualities = [\"default\"];\n      capabilities.formats = [\"jpg\", \"png\"];\n      break;\n    // level0\n    default:\n      capabilities.qualities = [\"default\"];\n      capabilities.formats = [\"jpg\"];\n      break;\n  }\n\n  // Formats\n  if (data.profile[1] && data.profile[1].formats) capabilities.formats = data.profile[1].formats;\n\n  // Qualities\n  if (data.profile[1] && data.profile[1].qualities) capabilities.qualities = data.profile[1].qualities;\n\n  // Rotation\n  if (\n    data.profile[1] &&\n    data.profile[1].supports &&\n    (data.profile[1].supports.includes(\"rotationBy90s\") || data.profile[1].supports.includes(\"rotationArbitrary\"))\n  )\n    capabilities.rotation = true;\n\n  // Mirroring\n  if (data.profile[1] && data.profile[1].supports && data.profile[1].supports.includes(\"mirroring\"))\n    capabilities.mirroring = true;\n\n  // Tiles size & scale factors\n  if (data.tiles && data.tiles.length > -1) {\n    const tile = data.tiles[0];\n    capabilities.tileSize = L.point(tile.width, tile.height ? tile.height : tile.width);\n    capabilities.minZoom =\n      Math.log2(tile.scaleFactors[tile.scaleFactors.length - 1]) *\n      (tile.scaleFactors[tile.scaleFactors.length - 1] > 1 ? -1 : 1);\n    capabilities.maxZoom = Math.log2(tile.scaleFactors[0]) * (tile.scaleFactors[0] > 1 ? -1 : 1);\n  }\n\n  return capabilities;\n}\n\n/**\n * Compute the server capabilities for a IIIF server in v3.0.\n * @see https://iiif.io/api/image/3.0/#51-image-information-request\n */\nfunction computeServerCapabilitiesForV3(data: any): ServerCapabilities {\n  const capabilities = Object.assign({}, SERVER_CAPABILITIES_DEFAULT);\n  capabilities.version = \"3.0\";\n\n  const level = data.profile;\n\n  // Defined capabilities per level\n  switch (level) {\n    case \"level2\":\n      capabilities.qualities = [\"default\"];\n      capabilities.formats = [\"jpg\", \"png\"];\n      break;\n    default:\n      capabilities.qualities = [\"default\"];\n      capabilities.formats = [\"jpg\"];\n      break;\n  }\n\n  // Extra format\n  if (data.extraFormats && data.extraFormats instanceof Array)\n    capabilities.formats = capabilities.formats.concat(\n      data.extraFormats.filter(ef => !capabilities.formats.includes(ef)),\n    );\n\n  // Extra qualities\n  if (data.extraQualities && data.extraQualities instanceof Array)\n    capabilities.qualities = capabilities.qualities.concat(\n      data.extraQualities.filter(eq => !capabilities.qualities.includes(eq)),\n    );\n\n  // Rotation\n  if (\n    data.extraFeatures &&\n    (data.extraFeatures.includes(\"rotationBy90s\") || data.extraFeatures.includes(\"rotationArbitrary\"))\n  )\n    capabilities.rotation = true;\n\n  // Mirroring\n  if (data.extraFeatures && data.extraFeatures.includes(\"mirroring\")) capabilities.mirroring = true;\n\n  // Tiles size\n  if (data.tiles && data.tiles.length > -1) {\n    const tile = data.tiles[0];\n    capabilities.tileSize = L.point(tile.width, tile.height ? tile.height : tile.width);\n    capabilities.minZoom =\n      Math.log2(tile.scaleFactors[tile.scaleFactors.length - 1]) *\n      (tile.scaleFactors[tile.scaleFactors.length - 1] > 1 ? -1 : 1);\n    capabilities.maxZoom = Math.log2(tile.scaleFactors[0]) * (tile.scaleFactors[0] > 1 ? -1 : 1);\n  }\n\n  return capabilities;\n}\n\n/* eslint-enable  @typescript-eslint/explicit-module-boundary-types, @typescript-eslint/no-explicit-any */\n","/**\n * Construct the tiles url template from the iiif image url\n */\nexport function templateUrl(url: string): string {\n  return url.replace(/info.json$/, \"{region}/{size}/{mirroring}{rotation}/{quality}.{format}\");\n}\n","export type Point = { x: number; y: number };\nexport type Square = { bottomLeft: Point; topRight: Point };\n\n/**\n * Rotation projection of a point around the origin 0,0.\n *\n * @param rotation The rotation in degree (ex: 90)\n * @param point The point to project\n * @returns The projected point for the specified rotation.\n */\nexport function projectPoint(rotation: number, point: Point): Point {\n  // negate to follow the direction 180-0\n  const rotationInRadian = (-1 * rotation * Math.PI) / 180;\n  return {\n    x: Math.round(point.x * Math.cos(rotationInRadian) - point.y * Math.sin(rotationInRadian)),\n    y: Math.round(point.y * Math.cos(rotationInRadian) + point.x * Math.sin(rotationInRadian)),\n  };\n}\n\n/**\n * Rotation projection of a square, around the origin 0,0.\n *\n * @param rotation The rotation in degree (ex: 90)\n * @param square The square to project\n * @returns The projected square for the specified rotation.\n */\nexport function projectSquare(rotation: number, square: Square): Square {\n  const p1 = projectPoint(rotation, square.bottomLeft);\n  const p2 = projectPoint(rotation, square.topRight);\n  const minX = Math.min(p1.x, p2.x);\n  const maxX = Math.max(p1.x, p2.x);\n  const minY = Math.min(p1.y, p2.y);\n  const maxY = Math.max(p1.y, p2.y);\n  return {\n    bottomLeft: { x: minX, y: minY },\n    topRight: { x: maxX, y: maxY },\n  };\n}\n","import L, { Control, Map } from \"leaflet\";\nimport { IIIFLayer } from \"./layer\";\nimport { IIIF_EVENTS } from \"./event\";\nimport { DEFAULT_CONTROL_OPTIONS, IIIFControlOptions } from \"./types\";\n\nconst CONTROL_NAME = \"leaflet-control-iiif\";\n\nexport class IIIFControl extends Control {\n  // Control options\n  public options: IIIFControlOptions;\n\n  layer: IIIFLayer;\n  _container: HTMLElement;\n\n  /**\n   * IIIF Control constructor.\n   *\n   * @param {object} options List of options for the control\n   */\n  constructor(layer: IIIFLayer, options: Partial<IIIFControlOptions> = {}) {\n    super(Object.assign({}, DEFAULT_CONTROL_OPTIONS, options));\n    this.layer = layer;\n    this._container = L.DomUtil.create(\"div\", `${CONTROL_NAME} leaflet-bar`);\n  }\n\n  onAdd(map: Map): HTMLElement {\n    const container = this.getContainer();\n\n    // Waiting the init of the layer\n    this.layer.initializePromise.then(() => {\n      // Qualities\n      if (this.options.quality.enabled === true) {\n        const qualities = this.options.quality.values ? this.options.quality.values : this.layer.server.qualities;\n        this.createActions(\n          container,\n          this.options.quality.title,\n          `${CONTROL_NAME}-quality`,\n          this.options.quality.html,\n          qualities.map((quality: string) => {\n            return {\n              title: quality,\n              className: `${CONTROL_NAME}-quality-${quality}`,\n              innerHTML: quality,\n              fn: () => {\n                map.fire(IIIF_EVENTS.CHANGE_QUALITY, { value: quality });\n              },\n            };\n          }),\n        );\n      }\n\n      // Formats\n      if (this.options.format.enabled === true) {\n        const formats = this.options.format.values ? this.options.format.values : this.layer.server.formats;\n        this.createActions(\n          container,\n          this.options.format.title,\n          `${CONTROL_NAME}-format`,\n          this.options.format.html,\n          formats.map((format: string) => {\n            return {\n              title: format,\n              className: `${CONTROL_NAME}-format-${format}`,\n              innerHTML: format,\n              fn: () => {\n                map.fire(IIIF_EVENTS.CHANGE_FORMAT, { value: format });\n              },\n            };\n          }),\n        );\n      }\n\n      // Formats\n      if (this.options.rotation.enabled === true && this.layer.server.rotation === true) {\n        const rotations = this.options.rotation.values ? this.options.rotation.values : [\"0\", \"90\", \"180\", \"270\"];\n        this.createActions(\n          container,\n          this.options.rotation.title,\n          `${CONTROL_NAME}-rotation`,\n          this.options.rotation.html,\n          rotations.map((rotation: string) => {\n            return {\n              title: rotation,\n              className: `${CONTROL_NAME}-rotation-${rotation}`,\n              innerHTML: rotation,\n              fn: () => {\n                map.fire(IIIF_EVENTS.CHANGE_ROTATION, { value: Number.parseInt(rotation) });\n              },\n            };\n          }),\n        );\n      }\n\n      // Mirroring\n      if (this.options.mirroring.enabled === true && this.layer.server.mirroring === true) {\n        this.createButton(\n          container,\n          this.options.mirroring.title,\n          `${CONTROL_NAME}-mirroring`,\n          this.options.mirroring.html,\n          () => {\n            map.fire(IIIF_EVENTS.CHANGE_MIRRORING, { value: !this.layer.options.mirroring });\n          },\n        );\n      }\n    });\n\n    return container;\n  }\n\n  /**\n   * Create a button\n   */\n  private createActions(\n    container: HTMLElement,\n    title: string,\n    className: string,\n    innerHTML: string,\n    actions: Array<{ title: string; className: string; innerHTML: string; fn: () => void }>,\n  ) {\n    const actionsWrapper = L.DomUtil.create(\"div\", className);\n    this.createButton(actionsWrapper, title, className, innerHTML, () => {\n      if (container.dataset.opened === className) container.dataset.opened = \"\";\n      else container.dataset.opened = className;\n    });\n\n    const actionsList = L.DomUtil.create(\"ul\", className);\n    actions.forEach(action => {\n      const li = L.DomUtil.create(\"li\", \"\", actionsList);\n      this.createButton(li, action.title, action.className, action.innerHTML, () => {\n        action.fn();\n        container.dataset.opened = \"\";\n      });\n      actionsList.appendChild(li);\n    });\n    actionsWrapper.appendChild(actionsList);\n\n    container.appendChild(actionsWrapper);\n  }\n\n  /**\n   * Create a button\n   */\n  private createButton(\n    container: HTMLElement,\n    title: string,\n    className: string,\n    innerHTML: string,\n    fn: () => void,\n  ): HTMLElement {\n    const link: HTMLElement = L.DomUtil.create(\"a\", className, container);\n    link.title = title;\n    link.innerHTML = innerHTML;\n    L.DomEvent.on(link, \"mousedown dblclick\", L.DomEvent.stopPropagation).on(link, \"click\", fn, this);\n    return link;\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { IIIFLayerOptions, IIIFControlOptions, ServerCapabilities } from \"./types\";\nimport { IIIF_EVENTS } from \"./event\";\nimport { IIIFLayer } from \"./layer\";\nimport { IIIFControl } from \"./toolbar\";\n\nexport { IIIFLayer, IIIFControl, IIIFLayerOptions, IIIFControlOptions, ServerCapabilities };\n\nwindow.L[\"Iiif\"] = { Event: IIIF_EVENTS };\n\nwindow.L.tileLayer[\"iiif\"] = function(url: string, options: IIIFLayerOptions) {\n  return new IIIFLayer(url, options);\n};\n\nwindow.L.control[\"iiif\"] = function(layer: IIIFLayer, options: IIIFControlOptions) {\n  return new IIIFControl(layer, options);\n};\n"],"sourceRoot":""}